#!/bin/bash

# output_headers status message
output_headers() {
    cat <<EOF
Status: $1 $2
Expires: Fri, 01 Jan 1980 00:00:00 GMT
Pragma: no-cache
Cache-Control: no-cache, max-age=0, must-revalidate
Content-type: text/html

EOF
}

IFS='/' read -ra path <<< "$PATH_INFO"

repo=${path[1]}

# insecure, but necessary at the moment
export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

if [ ! -d $GIT_PROJECT_ROOT/$repo ] ; then
    ssh-agent bash -c "printf \"${GIT_SSH_PRIVATE_KEY_PASS}\n\" | ssh-add ~/.ssh/id_rsa; git clone --bare $GIT_REMOTE_REPO_PREFIX/$repo $GIT_PROJECT_ROOT/$repo"
    /usr/lib/git-core/git-http-backend
else
    ssh-agent bash -c "printf \"${GIT_SSH_PRIVATE_KEY_PASS}\n\" | ssh-add ~/.ssh/id_rsa; git fetch -C $GIT_PROJECT_ROOT/$repo origin" > /dev/null
    /usr/lib/git-core/git-http-backend
fi

exit $?

# output_headers 200 OK

# echo REPO is $repo

# for i in "${path[@]}"; do
#     echo "$i";
# done

# cat << EOF
# <html>
# <head><title>Bash script</title></head>
# <body><pre>
# <div align=center><h1>A BASH CGI index on third location with env variables</h1></div>
# EOF

# env

# cat << EOF
# </body>
# </html>
# EOF

# exit 0
